using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore.Serializer.Perf;

namespace FreecraftCore.Serializer.Perf
{
	[AutoGeneratedWireMessageImplementationAttribute]
	public partial class AuthLogonProofResponse
	{
		public override Type SerializableType => typeof(AuthLogonProofResponse);
		public override AuthPacketBaseTest Read(Span<byte> buffer, ref int offset)
		{
			AuthLogonProofResponse_Serializer.Instance.InternalRead(this, buffer, ref offset);
			return this;
		}

		public override void Write(AuthPacketBaseTest value, Span<byte> buffer, ref int offset)
		{
			AuthLogonProofResponse_Serializer.Instance.InternalWrite(this, buffer, ref offset);
		}
	}
}

namespace FreecraftCore.Serializer.Perf
{
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	//THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
	/// <summary>
	/// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
	/// code for the Type: <see cref = "AuthLogonProofResponse"/>
	/// </summary>
	public sealed partial class AuthLogonProofResponse_Serializer : BaseAutoGeneratedSerializerStrategy<AuthLogonProofResponse_Serializer, AuthLogonProofResponse>
	{
		/// <summary>
		/// Auto-generated deserialization/read method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalRead(AuthLogonProofResponse value, Span<byte> buffer, ref int offset)
		{
			//Type: AuthPacketBaseTest Field: 1 Name: OperationCode Type: Byte
			;
			value.OperationCode = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
			//Type: AuthPacketBaseTest Field: 2 Name: TestKnownSizeByteArrayLargePerf Type: Byte[]
			;
			value.TestKnownSizeByteArrayLargePerf = FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_5000>.Instance.Read(buffer, ref offset);
			//Type: AuthLogonProofResponse Field: 1 Name: ProofResult Type: BaseLogonProofResult
			;
			value.ProofResult = BaseLogonProofResult_Serializer.Instance.Read(buffer, ref offset);
		}

		/// <summary>
		/// Auto-generated serialization/write method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalWrite(AuthLogonProofResponse value, Span<byte> buffer, ref int offset)
		{
			//Type: AuthPacketBaseTest Field: 1 Name: OperationCode Type: Byte
			;
			BytePrimitiveSerializerStrategy.Instance.Write(value.OperationCode, buffer, ref offset);
			//Type: AuthPacketBaseTest Field: 2 Name: TestKnownSizeByteArrayLargePerf Type: Byte[]
			;
			FixedSizePrimitiveArrayTypeSerializerStrategy<byte, StaticTypedNumeric_Int32_5000>.Instance.Write(value.TestKnownSizeByteArrayLargePerf, buffer, ref offset);
			//Type: AuthLogonProofResponse Field: 1 Name: ProofResult Type: BaseLogonProofResult
			;
			BaseLogonProofResult_Serializer.Instance.Write(value.ProofResult, buffer, ref offset);
		}

		private sealed class StaticTypedNumeric_Int32_5000 : StaticTypedNumeric<Int32>
		{
			public sealed override Int32 Value => 5000;
		}
	}
}