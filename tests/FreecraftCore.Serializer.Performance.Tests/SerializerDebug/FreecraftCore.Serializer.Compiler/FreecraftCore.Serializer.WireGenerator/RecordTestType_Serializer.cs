using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore
{
	[AutoGeneratedWireMessageImplementationAttribute]
	public partial record RecordTestType
	{
		public override Type SerializableType => typeof(RecordTestType);
		public override BaseRecordTestType Read(Span<byte> buffer, ref int offset)
		{
			throw new NotSupportedException("Record types do not support WireMessage Read.");
		}

		public override void Write(BaseRecordTestType value, Span<byte> buffer, ref int offset)
		{
			RecordTestType_Serializer.Instance.Write(this, buffer, ref offset);
		}
	}
}

namespace FreecraftCore
{
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	//THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
	/// <summary>
	/// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
	/// code for the Type: <see cref = "RecordTestType"/>
	/// </summary>
	public sealed partial class RecordTestType_Serializer : BaseAutoGeneratedRecordSerializerStrategy<RecordTestType_Serializer, RecordTestType>
	{
		/// <summary>
		/// Auto-generated deserialization/read method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override RecordTestType Read(Span<byte> buffer, ref int offset)
		{
			var local_BaseValue = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
			FreecraftCore.RecordTestType value = new FreecraftCore.RecordTestType(GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset), DontTerminateLengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, Int32>.Instance.Read(buffer, ref offset))
			{BaseValue = local_BaseValue};
			return value;
		}

		/// <summary>
		/// Auto-generated serialization/write method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void Write(RecordTestType value, Span<byte> buffer, ref int offset)
		{
			//Type: BaseRecordTestType Field: 1 Name: BaseValue Type: Int32
			;
			GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.BaseValue, buffer, ref offset);
			//Type: RecordTestType Field: 1 Name: TestField Type: Int32
			;
			GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.TestField, buffer, ref offset);
			//Type: RecordTestType Field: 2 Name: TestField2 Type: String
			;
			DontTerminateLengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, Int32>.Instance.Write(value.TestField2, buffer, ref offset);
		}
	}
}