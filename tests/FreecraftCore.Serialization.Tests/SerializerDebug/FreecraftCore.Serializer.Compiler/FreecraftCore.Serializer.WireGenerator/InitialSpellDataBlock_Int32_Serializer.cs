using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore
{
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	//THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
	/// <summary>
	/// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
	/// code for the Type: <see cref = "InitialSpellDataBlock<Int32>"/>
	/// </summary>
	public sealed partial class InitialSpellDataBlock_Int32_Serializer : BaseAutoGeneratedSerializerStrategy<InitialSpellDataBlock_Int32_Serializer, InitialSpellDataBlock<Int32>>
	{
		/// <summary>
		/// Auto-generated deserialization/read method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalRead(InitialSpellDataBlock<Int32> value, Span<byte> buffer, ref int offset)
		{
			//Type: InitialSpellDataBlock Field: 1 Name: UnkByte Type: Byte
			;
			value.UnkByte = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
			//Type: InitialSpellDataBlock Field: 2 Name: SpellIds Type: InitialSpellData[]
			;
			value.SpellIds = SendSizeComplexArrayTypeSerializerStrategy<InitialSpellData_Int32_Serializer, InitialSpellData<int>, UInt16>.Instance.Read(buffer, ref offset);
			//Type: InitialSpellDataBlock Field: 3 Name: SpellCooldowns Type: InitialSpellCooldown[]
			;
			value.SpellCooldowns = SendSizeComplexArrayTypeSerializerStrategy<InitialSpellCooldown_Int32_Serializer, InitialSpellCooldown<int>, UInt16>.Instance.Read(buffer, ref offset);
		}

		/// <summary>
		/// Auto-generated serialization/write method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalWrite(InitialSpellDataBlock<Int32> value, Span<byte> buffer, ref int offset)
		{
			//Type: InitialSpellDataBlock Field: 1 Name: UnkByte Type: Byte
			;
			BytePrimitiveSerializerStrategy.Instance.Write(value.UnkByte, buffer, ref offset);
			//Type: InitialSpellDataBlock Field: 2 Name: SpellIds Type: InitialSpellData[]
			;
			SendSizeComplexArrayTypeSerializerStrategy<InitialSpellData_Int32_Serializer, InitialSpellData<int>, UInt16>.Instance.Write(value.SpellIds, buffer, ref offset);
			//Type: InitialSpellDataBlock Field: 3 Name: SpellCooldowns Type: InitialSpellCooldown[]
			;
			SendSizeComplexArrayTypeSerializerStrategy<InitialSpellCooldown_Int32_Serializer, InitialSpellCooldown<int>, UInt16>.Instance.Write(value.SpellCooldowns, buffer, ref offset);
		}
	}
}