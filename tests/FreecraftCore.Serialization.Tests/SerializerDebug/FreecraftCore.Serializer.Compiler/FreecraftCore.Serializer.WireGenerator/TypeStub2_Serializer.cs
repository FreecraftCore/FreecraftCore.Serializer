using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore.Serializer.CustomTypes;

namespace FreecraftCore.Serializer.CustomTypes
{
	[AutoGeneratedWireMessageImplementationAttribute]
	public partial class TypeStub2
	{
		public override Type SerializableType => typeof(TypeStub2);
		public override BaseTypeStub Read(Span<byte> buffer, ref int offset)
		{
			TypeStub2_Serializer.Instance.InternalRead(this, buffer, ref offset);
			return this;
		}

		public override void Write(BaseTypeStub value, Span<byte> buffer, ref int offset)
		{
			TypeStub2_Serializer.Instance.InternalWrite(this, buffer, ref offset);
		}
	}
}

namespace FreecraftCore.Serializer.CustomTypes
{
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	//THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
	/// <summary>
	/// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
	/// code for the Type: <see cref = "TypeStub2"/>
	/// </summary>
	public sealed partial class TypeStub2_Serializer : BaseAutoGeneratedSerializerStrategy<TypeStub2_Serializer, TypeStub2>
	{
		/// <summary>
		/// Auto-generated deserialization/read method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalRead(TypeStub2 value, Span<byte> buffer, ref int offset)
		{
			//Type: BaseTypeStub Field: 1 Name: BaseIntField Type: Int32
			;
			value.BaseIntField = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
			//Type: BaseTypeStub Field: 2 Name: BaseIntFieldArray Type: Int32[]
			;
			value.BaseIntFieldArray = FixedSizePrimitiveArrayTypeSerializerStrategy<int, StaticTypedNumeric_Int32_2>.Instance.Read(buffer, ref offset);
			//Type: TypeStub2 Field: 1 Name: Hello Type: Int32
			;
			value.Hello = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
		}

		/// <summary>
		/// Auto-generated serialization/write method.
		/// Partial method implemented from shared partial definition.
		/// </summary>
		/// <param name = "value">See external doc.</param>
		/// <param name = "buffer">See external doc.</param>
		/// <param name = "offset">See external doc.</param>
		public override void InternalWrite(TypeStub2 value, Span<byte> buffer, ref int offset)
		{
			//Type: BaseTypeStub Field: 1 Name: BaseIntField Type: Int32
			;
			GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.BaseIntField, buffer, ref offset);
			//Type: BaseTypeStub Field: 2 Name: BaseIntFieldArray Type: Int32[]
			;
			FixedSizePrimitiveArrayTypeSerializerStrategy<int, StaticTypedNumeric_Int32_2>.Instance.Write(value.BaseIntFieldArray, buffer, ref offset);
			//Type: TypeStub2 Field: 1 Name: Hello Type: Int32
			;
			GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.Hello, buffer, ref offset);
		}

		private sealed class StaticTypedNumeric_Int32_2 : StaticTypedNumeric<Int32>
		{
			public sealed override Int32 Value => 2;
		}
	}
}